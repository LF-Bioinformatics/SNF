#!/bin/bash

version=1.3.1
hidef=false
adapter=-
ratio=0.40
givehelp=


while getopts I:F:R:A:d:a:r:h flag
do
    case "${flag}" in
        I) ID=${OPTARG};;
        F) fastq=${OPTARG};;
        R) reference=${OPTARG};;
        A) annotation=${OPTARG};;
        d) hidef=${OPTARG};;
        a) adapter=${OPTARG};;
        r) ratio=${OPTARG};;
        h) givehelp="yes";;
    esac
done

if [ -n "$givehelp" ]; then
    echo "ASNF version $version."
    echo "Usage: asnf [-d hd] [-a adapter] [-r ratio] -I runID -F fastq(s) -R reference.fasta -A annotation.fasta"
    echo "-I    :   Mandatory   - A unique identifier for this analysis/run."
    echo "-F    :   Mandatory   - Small RNAs in fastq format,"
    echo "-R    :   Mandatory   - Reference genome in fasta format."
    echo "-A    :   Mandatory   - Annotation file containing genes in fasta format."
    echo "-d    :   Optional    - HD adapters used? true if sRNAs were obtained using High Definition Adapters, otherwise false."
    echo "-a    :   Optional    - Adapter sequence to be trimmed from small RNA fastq(s). If no adapter is supplied, Trimalore! auto detect adapter will be used."
    echo "-r    :   Optional    - Maximum length ratio of spacer/total sequence used by GRF."
    echo "-h    :   Help        - Help page."
    exit 0
elif [ -z "$ID" ] || [ -z "$fastq" ] || [ -z "$reference" ] || [ -z "$annotation" ]; then
    echo 'Missing mandatory parameter. Use -h for help.' >&2
    exit 1
fi

echo "Running ASNF version $version."
echo "Parameters: $ID $fastq $reference $annotation $hidef $adapter $ratio."
java -jar A_SNF_1.jar $ID $fastq $reference $annotation $hidef $adapter $ratio
java -jar A_SNF_2.jar $ID/results/IRs/IRs.fa $ID/results/align/*trimmed.fq.fasta.nr.fa.patman.aln $ID/results/blast/blastn.results.txt $ID/results/tables/

